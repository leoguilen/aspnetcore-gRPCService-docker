syntax = "proto3";

option csharp_namespace = "PrateleiraLivros.gRPCService.Protos";

package v1;

service Autor {
	rpc ListAll (AutorSearch) returns (stream AutoresResponse);
	rpc GetById (AutorFilter) returns (AutorResponse);
	rpc Create (AutorCreateRequest) returns (AutorResponse);
	rpc Update (AutorUpdateRequest) returns (AutorResponse);
	rpc Delete (AutorFilter) returns (AutorResponse);
	rpc GetLivros (AutorFilter) returns (stream AutorLivrosResponse);
}

// Filtros

message AutorFilter {
	string autorId = 1;
}

message AutorSearch {
	string nome = 1;
	string email = 2;
}

// Modelos

message AutorModel {
	string id = 1;
	string nome = 2;
	string sobrenome = 3;
	string email = 4;
	string bio = 5;
	string avatar = 6;
}

message AutorLivroModel {
	string id = 1;
	string titulo = 2;
	string descricao = 3;
	double valor = 4;
	int64 isbn10 = 5;
	int32 edicao = 6;
	string dataPublicacao = 7;
	string idioma = 8;
	int32 numeroPaginas = 9;
	string editoraId = 10;
	string autorId = 11;
}

message AutorValidationErrorsModel {
	string error = 1;
	string property = 2;
	string nivel = 3;
}

// Requisições

message AutorCreateRequest {
	string nome = 1;
	string sobrenome = 2;
	string email = 3;
	string bio = 4;
	string avatar = 5;
}

message AutorUpdateRequest {
	string autorId = 1;
	string nome = 2;
	string sobrenome = 3;
	string email = 4;
	string bio = 5;
	string avatar = 6;
}

// Respostas

message AutoresResponse {
	int32 code = 1;
	string message = 2;
	repeated AutorModel data = 3;
	repeated string errors = 4;
	repeated AutorValidationErrorsModel validations = 5;
}

message AutorResponse {
	int32 code = 1;
	string message = 2;
	AutorModel data = 3;
	repeated string errors = 4;
	repeated AutorValidationErrorsModel validations = 5;
}

message AutorLivrosResponse {
	int32 code = 1;
	string message = 2;
	repeated AutorLivroModel data = 3;
	repeated string errors = 4;
}